//
//  GuideParentViewController.swift
//  Guide
//
//  Automatically generated by MobileCodeGenerator 4.
//  Copyright 2018 . All rights reserved.
//

import UIKit

class GuideParentViewController: UIViewController {
    
    // MARK: Properties
	fileprivate let linksVC: UIViewController
	fileprivate let websitesVC: UIViewController
    fileprivate var layoutType: Int = Constants.SCENE_TYPE_SINGLE_VC
    lazy var menuTransitioningDelegate = MenuPresentationManager()
    
    
    // MARK: Initialization
    init() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
		linksVC = storyboard.instantiateViewController(withIdentifier: "LinksViewControllerStoryboardID")
		websitesVC = storyboard.instantiateViewController(withIdentifier: "WebsitesViewControllerStoryboardID")
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
		linksVC = storyboard.instantiateViewController(withIdentifier: "LinksViewControllerStoryboardID")
		websitesVC = storyboard.instantiateViewController(withIdentifier: "WebsitesViewControllerStoryboardID")
        super.init(coder: aDecoder)
    }
    
    // MARK: UIViewController
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // Setup menu button into navigation bar
	    let menuIcon = UIImage(named: "menu_icon")
	    navigationItem.leftBarButtonItem = UIBarButtonItem(image: menuIcon, style: .plain, target: self, action: #selector(showMenu))
	    
        
        if UIDevice.current.userInterfaceIdiom == .phone {
        	layoutType = Constants.SCENE_TYPE_SINGLE_VC
            setupPhoneUI()
        } else if UIDevice.current.userInterfaceIdiom == .pad {
        	layoutType = Constants.SCENE_TYPE_MULTI_VC
            setupTabletUI()
        }
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func showMenu() {
    	let storyboard = UIStoryboard(name: "Main", bundle: nil)
		let menuViewController = storyboard.instantiateViewController(withIdentifier: "MenuViewControllerStoryboardID") as! MenuViewController
		menuViewController.delegate = self
		menuViewController.transitioningDelegate = menuTransitioningDelegate
		menuViewController.modalPresentationStyle = .custom
		present(menuViewController, animated: true, completion: nil)
	}
    
    
    // MARK: Phone UI Setup
    private func setupPhoneUI() {
		view.backgroundColor = UIColor(displayP3Red: 1, green: 1, blue: 1, alpha: 1)
		addChildViewController(linksVC)
		linksVC.didMove(toParentViewController: self)
		linksVC.view.translatesAutoresizingMaskIntoConstraints = false
		addChildViewController(websitesVC)
		websitesVC.didMove(toParentViewController: self)
		websitesVC.view.translatesAutoresizingMaskIntoConstraints = false
    	showLinksVC()
    }
    
    // MARK: Tablet UI Setup
    private func setupTabletUI() {
		view.backgroundColor = UIColor(displayP3Red: 1, green: 1, blue: 1, alpha: 1)
		addChildViewController(linksVC)
		linksVC.didMove(toParentViewController: self)
		let linksView = linksVC.view!
		linksView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(linksView)
        
        let separator = UIView()
        separator.translatesAutoresizingMaskIntoConstraints = false
        separator.backgroundColor = UIColor(displayP3Red: 0.73, green: 0.73, blue: 0.73, alpha: 1)
        view.addSubview(separator)
        NSLayoutConstraint.activate([
            separator.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            separator.topAnchor.constraint(equalTo: view.topAnchor),
            separator.widthAnchor.constraint(equalToConstant: 1),
            separator.leadingAnchor.constraint(equalTo: linksView.trailingAnchor)
            ])
		
		addChildViewController(websitesVC)
		websitesVC.didMove(toParentViewController: self)
		let websitesView = websitesVC.view!
		websitesView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(websitesView)
		
		// linksView Constraints
		NSLayoutConstraint.activate([
			
			linksView.topAnchor.constraint(
				equalTo: view.topAnchor, constant: 0),
			linksView.leadingAnchor.constraint(
				equalTo: view.leadingAnchor, constant: 0),
			
			linksView.widthAnchor.constraint(
				equalTo: view.widthAnchor, multiplier: 0.25),
			
			linksView.heightAnchor.constraint(
				equalTo: view.heightAnchor, multiplier: 1.0),
			
            ])
            
		// websitesView Constraints
		NSLayoutConstraint.activate([
			
			websitesView.topAnchor.constraint(
				equalTo: view.topAnchor, constant: 0),
			websitesView.leadingAnchor.constraint(
				equalTo: separator.trailingAnchor, constant: 0),
			websitesView.bottomAnchor.constraint(
				equalTo: view.bottomAnchor, constant: 0),
			websitesView.trailingAnchor.constraint(
				equalTo: view.trailingAnchor, constant: 0),
			
            ])
            
    }
    
    // MARK: functions that show each child view controller for singleVC/singleVCTab type scenes
	@objc fileprivate func showLinksVC() {
		if view.subviews.count > 0 {
			view.subviews[0].removeFromSuperview()
		}
	
		let linksView = linksVC.view!
        view.addSubview(linksView)
            
		NSLayoutConstraint.activate([
	            linksView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
	            linksView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
	            linksView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
	            linksView.topAnchor.constraint(equalTo: view.topAnchor)
            	])
        
        if layoutType != Constants.SCENE_TYPE_MULTI_VC {
            // Setup menu button into navigation bar
            let menuIcon = UIImage(named: "menu_icon")
            navigationItem.leftBarButtonItem = UIBarButtonItem(image: menuIcon, style: .plain, target: self, action: #selector(showMenu))
        }
	}
    
	fileprivate func showWebsitesVC() {
		if view.subviews.count > 0 {
			view.subviews[0].removeFromSuperview()
		}
	
		let websitesView = websitesVC.view!
        view.addSubview(websitesView)
            
		NSLayoutConstraint.activate([
	            websitesView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
	            websitesView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
	            websitesView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
	            websitesView.topAnchor.constraint(equalTo: view.topAnchor)
            	])
	}
    
}

// MARK: MenuViewControllerDelegate
extension GuideParentViewController: MenuViewControllerDelegate {
	func menuViewController(controller: MenuViewController, didSelectItem selectedItem: MenuItem) {
		var selectedViewController: UIViewController?
		switch selectedItem.destinationID {
    	case "Algebra":
    		selectedViewController = AlgebraParentViewController()
    	case "Equations":
    		selectedViewController = EquationsParentViewController()
    	case "Guide":
    		selectedViewController = GuideParentViewController()
    	case "About":
    		selectedViewController = AboutParentViewController()
    	default:
    		break
		}
		// Dismiss MenuViewController
		dismiss(animated: true)
		if selectedViewController != nil {
			navigationController!.viewControllers.append(selectedViewController!)
			navigationController!.viewControllers.removeFirst()
		}
	}
}


// MARK: ChildViewControllerInteractionProtocol
extension GuideParentViewController: ChildViewControllerInteractionProtocol {

	func childViewControllerInteraction(controlId: String, selectedItem: Any?) {
		switch controlId {
		
        case "algebraButton":
			if layoutType != Constants.SCENE_TYPE_MULTI_VC {
				showWebsitesVC()
                showBackButton()
			}
            (websitesVC as! WebsitesViewController).changePageURL(url: "http://www.youmath.it/lezioni/algebra-elementare")
            
        case "probabilityButton":
			if layoutType != Constants.SCENE_TYPE_MULTI_VC {
				showWebsitesVC()
                showBackButton()
			}
            (websitesVC as! WebsitesViewController).changePageURL(url: "http://www.youmath.it/lezioni/probabilita/probabilita-discreta")
            
        case "equationsButton":
			if layoutType != Constants.SCENE_TYPE_MULTI_VC {
				showWebsitesVC()
                showBackButton()
			}
            (websitesVC as! WebsitesViewController).changePageURL(url: "http://www.youmath.it/lezioni/algebra-elementare/equazioni")
            
    	default:
    		break
		}
    }
    
    func showBackButton() {
        navigationItem.leftBarButtonItem = UIBarButtonItem(title: "Back", style: .plain, target: self, action: #selector(showLinksVC))
    }
}
